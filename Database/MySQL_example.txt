-- https://junetudie.tistory.com/11 따라하기

select version();
create database sample;
use mysql;
use sample;
-- DEPT TABLE 생성
CREATE TABLE DEPT (
    DEPTNO DECIMAL(2),
    DNAME VARCHAR(14),
    LOC VARCHAR(13),
    CONSTRAINT PK_DEPT PRIMARY KEY (DEPTNO) 
);

-- EMP TABLE 생성
CREATE TABLE EMP (
    EMPNO DECIMAL(4),
    ENAME VARCHAR(10),
    JOB VARCHAR(9),
    MGR DECIMAL(4),
    HIREDATE DATE,
    SAL DECIMAL(7,2),
    COMM DECIMAL(7,2),
    DEPTNO DECIMAL(2),
    CONSTRAINT PK_EMP PRIMARY KEY (EMPNO),
    CONSTRAINT FK_DEPTNO FOREIGN KEY (DEPTNO) REFERENCES DEPT(DEPTNO)
);

-- SALGRADE TABLE 생성
CREATE TABLE SALGRADE ( 
    GRADE TINYINT,
    LOSAL SMALLINT,
    HISAL SMALLINT 
);

INSERT INTO DEPT VALUES (10,'ACCOUNTING','NEW YORK');
INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');
INSERT INTO DEPT VALUES (30,'SALES','CHICAGO');
INSERT INTO DEPT VALUES (40,'OPERATIONS','BOSTON');
INSERT INTO EMP VALUES (7369,'SMITH','CLERK',7902,STR_TO_DATE('17-12-1980','%d-%m-%Y'),800,NULL,20);
INSERT INTO EMP VALUES (7499,'ALLEN','SALESMAN',7698,STR_TO_DATE('20-2-1981','%d-%m-%Y'),1600,300,30);
INSERT INTO EMP VALUES (7521,'WARD','SALESMAN',7698,STR_TO_DATE('22-2-1981','%d-%m-%Y'),1250,500,30);
INSERT INTO EMP VALUES (7566,'JONES','MANAGER',7839,STR_TO_DATE('2-4-1981','%d-%m-%Y'),2975,NULL,20);
INSERT INTO EMP VALUES (7654,'MARTIN','SALESMAN',7698,STR_TO_DATE('28-9-1981','%d-%m-%Y'),1250,1400,30);
INSERT INTO EMP VALUES (7698,'BLAKE','MANAGER',7839,STR_TO_DATE('1-5-1981','%d-%m-%Y'),2850,NULL,30);
INSERT INTO EMP VALUES (7782,'CLARK','MANAGER',7839,STR_TO_DATE('9-6-1981','%d-%m-%Y'),2450,NULL,10);
INSERT INTO EMP VALUES (7788,'SCOTT','ANALYST',7566,STR_TO_DATE('13-7-1987','%d-%m-%Y')-85,3000,NULL,20);
INSERT INTO EMP VALUES (7839,'KING','PRESIDENT',NULL,STR_TO_DATE('17-11-1981','%d-%m-%Y'),5000,NULL,10);
INSERT INTO EMP VALUES (7844,'TURNER','SALESMAN',7698,STR_TO_DATE('8-9-1981','%d-%m-%Y'),1500,0,30);
INSERT INTO EMP VALUES (7876,'ADAMS','CLERK',7788,STR_TO_DATE('13-7-1987', '%d-%m-%Y'),1100,NULL,20);
INSERT INTO EMP VALUES (7900,'JAMES','CLERK',7698,STR_TO_DATE('3-12-1981','%d-%m-%Y'),950,NULL,30);
INSERT INTO EMP VALUES (7902,'FORD','ANALYST',7566,STR_TO_DATE('3-12-1981','%d-%m-%Y'),3000,NULL,20);
INSERT INTO EMP VALUES (7934,'MILLER','CLERK',7782,STR_TO_DATE('23-1-1982','%d-%m-%Y'),1300,NULL,10);
INSERT INTO SALGRADE VALUES (1,700,1200);
INSERT INTO SALGRADE VALUES (2,1201,1400);
INSERT INTO SALGRADE VALUES (3,1401,2000);
INSERT INTO SALGRADE VALUES (4,2001,3000);
INSERT INTO SALGRADE VALUES (5,3001,9999);
COMMIT;

-- ##SELECT
-- 사원 테이블의 모든 레코드를 조회하시오.
SELECT * FROM EMP;
SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO FROM EMP;

-- 사원명과 입사일을 조회하시오.
SELECT ENAME AS 사원명, HIREDATE AS 입사일 FROM EMP;

-- 사원번호와 이름을 조회하시오.
SELECT EMPNO AS 사원번호, ENAME AS 이름 FROM EMP;

-- 사원테이블에 있는 직책의 목록을 조회하시오.
SELECT DISTINCT JOB FROM EMP;

-- 총 사원수를 구하시오.
SELECT COUNT(EMPNO) FROM EMP;

-- WHERE 조건
-- 부서번호가 10인 사원을 조회하시오.
SELECT * FROM EMP;
SELECT * FROM EMP WHERE DEPTNO = 10;

-- 월급여가 2500이상 되는 사원을 조회하시오.
SELECT * FROM EMP WHERE SAL >= 2500;

-- 이름이 'KING'인 사원을 조회하시오. 대소문자를 조심해야한다.
SELECT * FROM EMP WHERE ENAME = 'KING';

-- 사원들 중 이름이 S로 시작하는 사원의 사원번호와 이름을 조회하시오.
SELECT EMPNO, ENAME FROM EMP WHERE ENAME LIKE 'S%';

-- 사원 이름에 T가 포함된 사원의 사원번호와 이름을 조회하시오.
SELECT EMPNO, ENAME FROM EMP WHERE ENAME LIKE '%T%';

-- 커미션이 300, 500, 1400 인 사원의 사번,이름,커미션을 조회하시오.
SELECT EMPNO, ENAME, COMM FROM EMP WHERE COMM IN (300, 500, 1400);

-- 월급여가 1200 에서 3500 사이의 사원의 사번,이름,월급여를 조회하시오.
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL BETWEEN 1200 AND 3500;

-- 직급이 매니저이고 부서번호가 30번인 사원의 이름,사번,직급,부서번호를 조회하시오.
SELECT EMPNO, ENAME, JOB, DEPTNO FROM EMP WHERE DEPTNO = 30 AND JOB = 'MANAGER';

-- 부서번호가 30인 아닌 사원의 사번,이름,부서번호를 조회하시오.
SELECT EMPNO, ENAME, DEPTNO FROM EMP WHERE DEPTNO != 30;

-- 커미션이 300, 500, 1400 이 모두 아닌 사원의 사번,이름,커미션을 조회하시오.
SELECT EMPNO,ENAME,COMM FROM EMP WHERE COMM NOT IN (300,500,1400);

-- 이름에 S가 포함되지 않는 사원의 사번,이름을 조회하시오.
SELECT EMPNO, ENAME FROM EMP WHERE ENAME NOT LIKE '%S%';

-- 급여가 1200보다 미만이거나 3700 초과하는 사원의 사번,이름,월급여를 조회하시오.
SELECT EMPNO, ENAME, SAL FROM EMP WHERE SAL < 1200 OR SAL >3700;
-- SELECT EMPNO, ENAME, SAL FROM EMP WHERE ENAME NOT BETWEEN 1200 AND 3700;

-- 직속상사가 NULL 인 사원의 이름과 직급을 조회하시오.
SELECT ENAME, JOB FROM EMP WHERE MGR IS NULL;

 -- GROUP BY 구문
 -- 부서별 평균월급여를 구하는 쿼리
 SELECT * FROM EMP;
 SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO;
 
 -- 부서별 전체 사원수와 커미션을 받는 사원들의 수를 구하는 쿼리
SELECT DEPTNO, COUNT(*), COUNT(COMM) FROM EMP GROUP BY DEPTNO;

-- 부서별 최대 급여와 최소 급여를 구하는 쿼리
SELECT DEPTNO, MAX(SAL), MIN(SAL) FROM EMP GROUP BY DEPTNO;

-- 부서별로 급여 평균 (단, 부서별 급여 평균이 2000 이상만)
SELECT DEPTNO, AVG(SAL) FROM EMP GROUP BY DEPTNO HAVING AVG(SAL) >= 2000;

-- 월급여가 1000 이상인 사원만을 대상으로 부서별로 월급여 평균을 구하라. 단, 평균값이 2000 이상인 레코드만 구하라.
SELECT DEPTNO, AVG(SAL) FROM EMP WHERE SAL >= 1000 GROUP BY DEPTNO HAVING AVG(SAL) >= 2000; 

-- ORBER BY 구문
-- 급여가 높은 순으로 조회하되 급여가 같을 경우 이름의 철자가 빠른 사원순으로 사번,이름,월급여를 조회하시오.
SELECT EMPNO, ENAME, SAL FROM EMP ORDER BY SAL DESC, ENAME ASC;

-- JOIN
-- 사원명과 부서명을 조회하시오.
SELECT E.ENAME, E.DEPTNO, D.DNAME FROM EMP E JOIN DEPT D USING (DEPTNO); 

-- 이름,월급여,월급여등급을 조회하시오.
 SELECT * FROM EMP;
 SHOW TABLES;
SELECT * FROM SALGRADE;
SELECT E.ENAME, E.SAL, S.GRADE FROM EMP E, SALGRADE S WHERE E.SAL BETWEEN LOSAL AND HISAL;

-- 이름,부서명,월급여등급을 조회하시오.
SELECT E.ENAME, E.DEPTNO, D.DNAME, S.GRADE FROM EMP E, DEPT D, SALGRADE S WHERE E.DEPTNO = D.DEPTNO AND E.SAL BETWEEN LOSAL AND HISAL;

-- 이름,직속상사이름을 조회하시오.
SHOW TABLES;
SELECT * FROM EMP;
SELECT E.ENAME, M.ENAME FROM EMP E, EMP M WHERE E.MGR = M.EMPNO;
-- NULL값을 나타내고싶다면 LEFT JOIN을 사용한다. LEFT JOIN은 조인 조건에 만족하지 못하더라도 나타낼 떄 사용된다.
SELECT E.ENAME, M.ENAME FROM EMP E LEFT JOIN EMP M ON E.MGR = M.EMPNO;

-- 부서번호가 30번인 사원들의 이름, 직급, 부서번호, 부서위치를 조회하시오.
SELECT * FROM EMP;
SELECT * FROM DEPT;
SELECT E.EMPNO, E.ENAME, E.JOB, E.DEPTNO, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.DEPTNO = 30;

-- 커미션을 받는 사원의 이름, 커미션, 부서이름,부서위치를 조회하시오.
SELECT E.ENAME, E.COMM, E.DEPTNO, D.DNAME, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND IFNULL(COMM,0) AND E.COMM > 0;

 -- DALLAS에서 근무하는 사원의 이름,직급,부서번호,부서명을 조회하시오.
SELECT E.ENAME, E.JOB, E.DEPTNO, D.DNAME, D.LOC FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND D.LOC = 'DALLAS';

-- 이름에 A 가 들어가는 사원의 이름,부서명을 조회하시오.
SELECT E.ENAME, E.DEPTNO, D.DNAME FROM EMP E, DEPT D WHERE E.DEPTNO = D.DEPTNO AND E.ENAME LIKE '%A%';

-- 이름, 직급, 월급여, 월급여등급을 조회하시오.
SELECT E.ENAME, E.JOB, E.SAL, S.GRADE FROM EMP E, SALGRADE S WHERE E.SAL BETWEEN LOSAL AND HISAL;

-- ALLEN과 같은 부서에 근무하는 사원의 이름, 부서번호를 조회하시오.
SELECT C.ENAME,C.DEPTNO FROM EMP E,EMP C WHERE E.EMPNO <> C.EMPNO AND E.DEPTNO = C.DEPTNO AND E.ENAME = 'ALLEN' ORDER BY C.ENAME;
-- E.EMPNO <>(!=) C.EMPNO ALLEN이랑은 EMPNO가 같지않아야해서 같지않다고 조건을 넣고 ORDER BY C.ENAME는 C.ENAME을 이름순으로 정렬한다는 애기다.
